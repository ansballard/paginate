/** @preserve
 *  @ansballard/paginate
 *  This is a simple, dependency-free pagination module, which handles the logic
 *  for paginating arbitrary data given as functions
 *  MIT License
 */
!function(t){"use strict";var e=function(t,e){var n=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},i=0,u=0,r=0;if(!(n(t)&&t>0))throw"Paginate count per page must be a positive integer";u=t;var s=e;return{setCount:function(t){if(!(n(t)&&t>0))throw"Paginate count per page must be a positive integer";return u=t,this.getVisibleContent()},setPage:function(t){if(!(n(t)&&t>=0&&t<this.getNumPages()))throw"Paginate page must be between 0 and numPages";return i=t,this.getVisibleContent()},getCount:function(){return u},getPage:function(){return i},getVisibleContent:function(){var t=[],e=s();i>=this.getNumPages()&&(i=0);var n=i*u;return t=e.slice(n,n+u)},getPages:function(){var t=[],e=s(),n=this.getNumPages();for(r=0;n>r;r++)t.push({count:u,index:r,first:0===r,last:r===n-1});return t.length>0&&(t[t.length-1].count=e.length%u),t},getNumPages:function(){return Math.ceil(s().length/u)},getIsFirstPage:function(){return 0===i},getIsLastPage:function(){return i===this.getNumPages()-1},firstPage:function(){return i=0,this.getVisibleContent()},prevPage:function(){return i=this.getIsFirstPage()?i:i-1,this.getVisibleContent()},nextPage:function(){return i=this.getIsLastPage()?i:i+1,this.getVisibleContent()},lastPage:function(){return i=this.getNumPages()-1,this.getVisibleContent()}}};"function"==typeof define&&define.amd?define(function(){return e}):"undefined"!=typeof module&&module.exports?module.exports=e:t.paginate=e}(this);
//# sourceMappingURL=paginate.min.js.map